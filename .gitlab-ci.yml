variables:
  SSH_SERVER: "gitlab-runner@ticksift.com"
  REVIEW_DOMAIN: "review.midnightmechanism.com"

image:
  name: lorisleiva/laravel-docker:7.2

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - vendor/

stages:
  - build
  - deploy

build_dev:
  stage: build
  script:
    - npm install
    - composer install
    - npm run dev
  artifacts:
    paths:
      - "public/"
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop" || $CI_MERGE_REQUEST_ID'

build_prod:
  stage: build
  script:
    - npm install
    - composer install
    - npm run prod
  artifacts:
    paths:
      - "public/"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

deploy_review:
  stage: deploy
  before_script:
    - echo "$STAGING_ENV" > .env
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY" | ssh-add -
  script:
    - rsync -a --exclude=.git --delete ./ gitlab-runner@$REVIEW_DOMAIN:/web/review/$CI_ENVIRONMENT_SLUG
    - ssh gitlab-runner@$REVIEW_DOMAIN "php /web/review/$CI_ENVIRONMENT_SLUG/artisan migrate --force"
  environment:
    name: review/$CI_PROJECT_PATH/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$REVIEW_DOMAIN
    on_stop: stop_review
  rules:
    - if: '$CI_MERGE_REQUEST_ID'

stop_review:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY" | ssh-add -
  script:
    - ssh gitlab-runner@$REVIEW_DOMAIN "rm -rf /web/review/$CI_ENVIRONMENT_SLUG"
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_PROJECT_PATH/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$REVIEW_DOMAIN
    action: stop
  cache: {}
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
      when: manual

deploy_staging:
  stage: deploy
  before_script:
    - echo "$STAGING_ENV" > .env
    - rm -rf storage
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY" | ssh-add -
  script:
    - rsync -ra --exclude=.git ./ $SSH_SERVER:/web/ticksift/staging_temp/
    - ssh $SSH_SERVER "rm -rf /web/ticksift/staging"
    - ssh $SSH_SERVER "mv /web/ticksift/staging_temp /web/ticksift/staging"
    - ssh $SSH_SERVER "ln -s /web/ticksift/storage_staging /web/ticksift/staging/storage"
    - ssh $SSH_SERVER "ln -s /web/ticksift/staging/storage/app/public /web/ticksift/staging/public/storage"
    - ssh $SSH_SERVER "php /web/ticksift/staging/artisan view:clear"
    - ssh $SSH_SERVER "php /web/ticksift/staging/artisan cache:clear"
    - ssh $SSH_SERVER "php /web/ticksift/staging/artisan migrate --force"
    - ssh $SSH_SERVER "nohup php /web/ticksift/staging/artisan momentum:calculate-presets > /dev/null 2>&1 &"
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'

deploy_prod:
  stage: deploy
  before_script:
    - echo "$PROD_ENV" > .env
    - rm -rf storage
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY" | ssh-add -
  script:
    - rsync -ra --exclude=.git ./ $SSH_SERVER:/web/ticksift/prod_temp/
    - ssh $SSH_SERVER "rm -rf /web/ticksift/prod"
    - ssh $SSH_SERVER "mv /web/ticksift/prod_temp /web/ticksift/prod"
    - ssh $SSH_SERVER "ln -s /web/ticksift/storage_prod /web/ticksift/prod/storage"
    - ssh $SSH_SERVER "ln -s /web/ticksift/prod/storage/app/public /web/ticksift/prod/public/storage"
    - ssh $SSH_SERVER "php /web/ticksift/prod/artisan view:clear"
    - ssh $SSH_SERVER "php /web/ticksift/prod/artisan cache:clear"
    - ssh $SSH_SERVER "php /web/ticksift/prod/artisan migrate --force"
    - ssh $SSH_SERVER "nohup php /web/ticksift/prod/artisan momentum:calculate-presets > /dev/null 2>&1 &"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
